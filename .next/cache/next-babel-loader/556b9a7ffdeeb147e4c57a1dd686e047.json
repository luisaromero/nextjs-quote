{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/marce/Documentos/next-movies/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react'; // import \"isomorphic-fetch\";\n\nvar Home = function Home(_ref) {\n  var quotes = _ref.quotes;\n  return __jsx(\"div\", {\n    id: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 1\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"Random Quotes From breaking Bad\"), __jsx(\"img\", {\n    src: \"/breaking-bad.jpg\",\n    alt: \"imagen de breaking bad con walter white y jesse pinkman\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }), quotes.map(function (e) {\n    return __jsx(\"div\", {\n      id: \"quotes\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 3\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 1\n      }\n    }, \"Quote :\", e.quote), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 1\n      }\n    }, \"Author : \", e.author));\n  }), __jsx(\"style\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 1\n    }\n  }, \"  \", \"p , h1{\\n    color:white;\\n    background:transparent;\\n    opacity:0.9\\n    }\\n    h1{\\n        padding-top:2%;\\n        padding-bottom:2%;\\n    }\\n  #quotes{\\n      width:100%;\\n      height:100%;\\n      position:absolute;\\n     \\n      background:transparent;\\n      top:50vh;\\n  }\\n  \\n  *{\\n      background:black;\\n      width:100%;\\n      margin:0\\n  }\\n  #container{\\n      display:flex;\\n      text-align:center;\\n      flex-direction:column;\\n      postion:relative;\\n    \\n  }\\n  img{\\n      width:100%;\\n      height:600px;\\n      \\n      \\n  }\"));\n};\n\n_c = Home;\nHome.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, quotes;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://breaking-bad-quotes.herokuapp.com/v1/quotes');\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          quotes = _context.sent;\n          return _context.abrupt(\"return\", {\n            quotes: quotes\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/marce/Documentos/next-movies/pages/index.js"],"names":["React","Home","quotes","map","e","quote","author","getInitialProps","fetch","response","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,IAAI,GAAI,SAARA,IAAQ;AAAA,MAAEC,MAAF,QAAEA,MAAF;AAAA,SAEd;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI;AAAK,IAAA,GAAG,EAAC,mBAAT;AAA6B,IAAA,GAAG,EAAC,yDAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGCA,MAAM,CAACC,GAAP,CAAW,UAAAC,CAAC;AAAA,WACX;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWA,CAAC,CAACC,KAAb,CADE,EAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaD,CAAC,CAACE,MAAf,CAFE,CADW;AAAA,GAAZ,CAHD,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0jBATA,CAFc;AAAA,CAAd;;KAAML,I;AAsDNA,IAAI,CAACM,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACIC,KAAK,CAAC,qDAAD,CADT;;AAAA;AACbC,UAAAA,QADa;AAAA;AAAA,iBAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAEbR,UAAAA,MAFa;AAAA,2CAIb;AAACA,YAAAA,MAAM,EAANA;AAAD,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAUA,eAAeD,IAAf","sourcesContent":["import React from 'react';\n// import \"isomorphic-fetch\";\n\nconst Home  = ({quotes}) => (\n   \n<div id=\"container\">\n    <h1>Random Quotes From breaking Bad</h1>\n    <img src='/breaking-bad.jpg' alt=\"imagen de breaking bad con walter white y jesse pinkman\"/>\n{quotes.map(e => (\n  <div id=\"quotes\">  \n<p>Quote :{e.quote}</p>\n<p>Author : {e.author}</p>\n</div>\n))}\n<style>  {\n`p , h1{\n    color:white;\n    background:transparent;\n    opacity:0.9\n    }\n    h1{\n        padding-top:2%;\n        padding-bottom:2%;\n    }\n  #quotes{\n      width:100%;\n      height:100%;\n      position:absolute;\n     \n      background:transparent;\n      top:50vh;\n  }\n  \n  *{\n      background:black;\n      width:100%;\n      margin:0\n  }\n  #container{\n      display:flex;\n      text-align:center;\n      flex-direction:column;\n      postion:relative;\n    \n  }\n  img{\n      width:100%;\n      height:600px;\n      \n      \n  }`\n \n} \n   \n</style>\n</div>\n);\nHome.getInitialProps = async () => {\n    const response = await fetch('https://breaking-bad-quotes.herokuapp.com/v1/quotes');\n    const quotes = await response.json();\n    \n    return{quotes};\n    \n};\n\n\n\nexport default Home"]},"metadata":{},"sourceType":"module"}